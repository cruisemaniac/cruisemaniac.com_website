<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech on cruisemaniac.com</title><link>https://cruisemaniac.com/tags/tech/</link><description>Recent content in tech on cruisemaniac.com</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 19 Dec 2014 12:20:00 +0000</lastBuildDate><atom:link href="https://cruisemaniac.com/tags/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Git vulnerability announced! Upgrade your git client</title><link>https://cruisemaniac.com/post/git-vulnerability-announced-upgrade-your-git-client/</link><pubDate>Fri, 19 Dec 2014 12:20:00 +0000</pubDate><guid>https://cruisemaniac.com/post/git-vulnerability-announced-upgrade-your-git-client/</guid><description>Git just announced a new release (ver 2.2.1) of the git client that fixes a vulnerability affecting all git users on Windows and Mac OSX operating systems. Github says this:
The vulnerability concerns Git and Git-compatible clients that access Git repositories in a case-insensitive or case-normalizing filesystem. An attacker can craft a malicious Git tree that will cause Git to overwrite its own .git/config file when cloning or checking out a repository, leading to arbitrary command execution in the client machine.</description></item><item><title>Git for Ages 4 and Up</title><link>https://cruisemaniac.com/post/git-for-ages-4-and-up/</link><pubDate>Wed, 24 Sep 2014 01:45:00 +0000</pubDate><guid>https://cruisemaniac.com/post/git-for-ages-4-and-up/</guid><description>Its a long video at a little over 1.5 hours but there is no better resource on the internet that can explain Git like how this video does!
Totally worth it.</description></item><item><title>Get Vagrant running with berkshelf on Mavericks</title><link>https://cruisemaniac.com/post/get-vagrant-running-with-berkshelf-on-mavericks/</link><pubDate>Tue, 09 Sep 2014 19:00:00 +0000</pubDate><guid>https://cruisemaniac.com/post/get-vagrant-running-with-berkshelf-on-mavericks/</guid><description>So, here I was trying to setup Vagrant on my Mac. Everything went fine till the vagrant up command and boom:
myfirstvagrantproject $ vagrant up Bringing machine 'projectname' up with 'virtualbox' provider... ==&amp;gt; projectname: The cookbook path '/Users/cruisemaniac/.berkshelf/projectname/vagrant/berkshelf-20140909-37664-1gf5t34-projectname' doesn't exist. Ignoring... Updating Vagrant's berkshelf: '/Users/cruisemaniac/.berkshelf/projectname/vagrant/berkshelf-20140909-37664-1gf5t34-projectname' RuntimeError: Couldn't determine Berks version: #&amp;lt;Buff::ShellOut::Response:0x00000101040360 @exitstatus=1, @stdout=&amp;quot;&amp;quot;, @stderr=&amp;quot;/Users/cruisemaniac/.rbenv/versions/2.1.2/lib/ruby/2.1.0/rubygems/dependency.rb:298:in `to_specs': Could not find 'berkshelf' (&amp;gt;= 0) among 56 total gem(s) (Gem::LoadError)\n\tfrom /Users/cruisemaniac/.rbenv/versions/2.1.2/lib/ruby/2.1.0/rubygems/dependency.rb:309:in `to_spec'\n\tfrom /Users/cruisemaniac/.rbenv/versions/2.1.2/lib/ruby/2.1.0/rubygems/core_ext/kernel_gem.rb:53:in `gem'\n\tfrom /Users/cruisemaniac/.</description></item><item><title>Homebrew and MySQL</title><link>https://cruisemaniac.com/post/homebrew-and-mysql/</link><pubDate>Fri, 05 Sep 2014 17:00:00 +0000</pubDate><guid>https://cruisemaniac.com/post/homebrew-and-mysql/</guid><description>I was recently trying to setup MySQL with Homebrew and noticed that the mysql server that brew installed was not playing nice with the existing setups.
The solution is to wipe out any existing MySQL installs you&amp;rsquo;ve got on your mac and redo everything from scratch with brew. This makes the mysql installed from Brew your main installation.
Read up on this blogpost that details the sequence. 5 minutes, a few commands and all is hanky-panky in mysql land :-)</description></item><item><title>Nginx HTTP Caching and Compression</title><link>https://cruisemaniac.com/post/nginx-http-caching-and-compression/</link><pubDate>Sat, 07 Dec 2013 11:00:00 +0000</pubDate><guid>https://cruisemaniac.com/post/nginx-http-caching-and-compression/</guid><description>This is a blog post for posterity - I&amp;rsquo;m sure I&amp;rsquo;ll forget how I did this and will go hunting again! and I must definitely be the last guy on the planet to be setting up nginx!
Nginx is pretty fast in itself. I use jekyll to power this site. So, when you&amp;rsquo;re reading this article, all the data is coming right off the hard disk - No databases, no queries, no lookups - simple fopen, read, stdoutâ€¦</description></item><item><title>Jekyll and Windows Code Pages</title><link>https://cruisemaniac.com/post/jekyll-and-windows-code-pages/</link><pubDate>Sat, 07 Dec 2013 03:30:00 +0000</pubDate><guid>https://cruisemaniac.com/post/jekyll-and-windows-code-pages/</guid><description>####Prelude I recently moved my blog over to Jekyll! Thanks to a black friday deal over at Digital Ocean, I got my hands on a vps that I dont have to pay for the next 10 months&amp;hellip;
So, the first thing I did was to setup my almost dead in the corner blog using Jekyll, something that I&amp;rsquo;ve been meaning to do for over a year now.. And unlike a lot of people using Jekyll on *nix and OSX based systems, I was forced to setup Ruby 1.</description></item><item><title>Fat controller or Fat model???</title><link>https://cruisemaniac.com/post/fat-controller-or-fat-model/</link><pubDate>Sat, 13 Apr 2013 23:32:54 +0000</pubDate><guid>https://cruisemaniac.com/post/fat-controller-or-fat-model/</guid><description>When coding up an app using the MVC model, how much of logic do you actually code up in the controller?
The controller&amp;rsquo;s job in an MVC setup is to pick up action requests from the user acting on the View, pass them to the model for data manipulation and pull out the new view to show to the user.
Now, the question in my mind is: How much of logic do you actually throw into the controller?</description></item></channel></rss>